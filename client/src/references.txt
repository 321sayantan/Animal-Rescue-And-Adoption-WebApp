Dummy pet description:

            " Jenny is an obidient and very calm dog who is well
            aware of cherishing the family and her nearests just like a
            guardian! She is very polite and 've got a likewise-feeling towards
            humans and studying their nature. She's capable of capturing any
            kind of high-trained skills and is a fit-and-fine mother of 4 pups."


Dummy post url:

https://adopet-54d51-default-rtdb.firebaseio.com/

  
close menu on click anywhere outside menu:

useEffect(() => {
    const handler = (e) => {
        if(e.target)
            setOpen(false)
    }

    document.addEventListener('mousedown', handler)
})



import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Map, Marker, GoogleApiWrapper } from 'google-maps-react';

const MapContainer = ({ google, posts }) => {
  const [map, setMap] = useState(null);

  const onMapReady = (mapProps, map) => {
    setMap(map);
  };

  return (
    <Map
      google={google}
      zoom={14}
      onReady={onMapReady}
      initialCenter={{
        lat: 37.774929,
        lng: -122.419416 // Default to San Francisco
      }}
    >
      {posts.map(post => (
        <Marker
          key={post.id}
          position={{ lat: post.latitude, lng: post.longitude }}
          name={post.title}
        />
      ))}
      {/* 
        <Marker
          onClick={this.onMarkerClick}
          name={'Kenyatta International Convention Centre'}
        />
        <InfoWindow
          marker={this.state.activeMarker}
          visible={this.state.showingInfoWindow}
          onClose={this.onClose}
        >
          <div>
            <h4>{this.state.selectedPlace.name}</h4>
          </div>
        </InfoWindow>
      */}
    </Map>
  );
};



const App = () => {
  const [searchTerm, setSearchTerm] = useState('');
  
  const handleSearch = (event) => {
    setSearchTerm(event.target.value);
  };

  return (
    <div>
      <input type="text" value={searchTerm} onChange={handleSearch} />
      <PostsComponent searchTerm={searchTerm} />
      <MapContainer google={google} posts={posts} />
    </div>
  );
};

export default GoogleApiWrapper({
  apiKey: 'YOUR_GOOGLE_MAPS_API_KEY'
})(App);







state = {
    showingInfoWindow: false,  // Hides or shows the InfoWindow
    activeMarker: {},          // Shows the active marker upon click
    selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker
};

 onMarkerClick = (props, marker, e) =>
    this.setState({
      selectedPlace: props,
      activeMarker: marker,
      showingInfoWindow: true
    });

  onClose = props => {
    if (this.state.showingInfoWindow) {
      this.setState({
        showingInfoWindow: false,
        activeMarker: null
      });
    }
  };



  app.get('/events', async (req, res) => {
  const { max, search } = req.query;
  const eventsFileContent = await fs.readFile('./data/events.json');
  let events = JSON.parse(eventsFileContent);

  if (search) {
    events = events.filter((event) => {
      const searchableText = `${event.title} ${event.description} ${event.location}`;
      return searchableText.toLowerCase().includes(search.toLowerCase());
    });
  }

  if (max) {
    events = events.slice(events.length - max, events.length);
  }

  res.json({
    events: events.map((event) => ({
      id: event.id,
      title: event.title,
      image: event.image,
      date: event.date,
      location: event.location,
    })),
  });
});